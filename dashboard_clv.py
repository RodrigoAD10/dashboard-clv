# -*- coding: utf-8 -*-
"""dashboard_clv

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TbuqxT5bn-cUdByEFBm8q8oTuhFTS5pn
"""

import streamlit as st
import pandas as pd

# Título del dashboard
st.set_page_config(layout="wide")
st.title("📊 Dashboard - Predicción de CLV (Customer Lifetime Value)")

# Cargar datos
@st.cache_data
def load_data():
    return pd.read_csv('predicciones_finales.csv')

df = load_data()

# Sidebar con filtros
st.sidebar.header("🔎 Filtros")
age = st.sidebar.slider("Edad (rango normalizado)", float(df["Age"].min()), float(df["Age"].max()), (float(df["Age"].min()), float(df["Age"].max())))
gender = st.sidebar.selectbox("Género", options=["Todos", "Hombre", "Mujer"])
discount = st.sidebar.selectbox("Descuento aplicado", options=["Todos", "Sí", "No"])
shipping = st.sidebar.selectbox("Tipo de envío en tienda", options=["Todos", "Sí", "No"])

# Filtrar datos
df_filtered = df.copy()
df_filtered = df_filtered[(df_filtered["Age"] >= age[0]) & (df_filtered["Age"] <= age[1])]

if gender != "Todos":
    df_filtered = df_filtered[df_filtered["Gender_Male"] == (gender == "Hombre")]

if discount != "Todos":
    df_filtered = df_filtered[df_filtered["Discount Applied_Yes"] == (discount == "Sí")]

if shipping != "Todos":
    df_filtered = df_filtered[df_filtered["Shipping Type_Store Pickup"] == (shipping == "Sí")]

# Gráfico 1: Distribución por CLV_Predicho
st.subheader("🎯 Distribución de clientes por CLV Predicho")
clv_counts = df_filtered['CLV_Predicho'].value_counts().sort_index()
st.bar_chart(clv_counts)

# Gráfico 2: Probabilidad promedio de CLV Alto
st.subheader("📈 Probabilidad promedio de CLV Alto")
st.metric("Probabilidad promedio", f"{df_filtered['Probabilidad_CLV_Alto'].mean():.2f}")

# Gráfico 3: Comparación CLV_Predicho por género
st.subheader("👤 Distribución de Género según CLV Predicho")
gender_clv = df_filtered.groupby(['Gender_Male', 'CLV_Predicho']).size().unstack(fill_value=0)
st.bar_chart(gender_clv)

# Gráfico 4: Relación entre Edad y Probabilidad de CLV Alto
st.subheader("📊 Relación entre Edad y Probabilidad de CLV Alto")
st.line_chart(df_filtered[["Age", "Probabilidad_CLV_Alto"]].sort_values("Age").set_index("Age"))